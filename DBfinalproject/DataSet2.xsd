<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet2" targetNamespace="http://tempuri.org/DataSet2.xsd" xmlns:mstns="http://tempuri.org/DataSet2.xsd" xmlns="http://tempuri.org/DataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DB_Proj_Hospital20ConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DB_Proj_Hospital20ConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DBfinalproject.Properties.Settings.GlobalReference.Default.DB_Proj_Hospital20ConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Lab_testTableAdapter" GeneratorDataComponentClassName="Lab_testTableAdapter" Name="Lab_test" UserDataComponentName="Lab_testTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_Proj_Hospital20ConnectionString1 (Settings)" DbObjectName="DB_Proj_Hospital20.dbo.Lab_test" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Lab_test] WHERE (([Test_Id] = @Original_Test_Id) AND ([Test_Name] = @Original_Test_Name) AND ([Test_Price] = @Original_Test_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Test_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Test_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Lab_test] ([Test_Id], [Test_Name], [Test_Price]) VALUES (@Test_Id, @Test_Name, @Test_Price);
SELECT Test_Id, Test_Name, Test_Price FROM Lab_test WHERE (Test_Id = @Test_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Test_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Test_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Test_Id, Test_Name, Test_Price FROM dbo.Lab_test</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Lab_test] SET [Test_Id] = @Test_Id, [Test_Name] = @Test_Name, [Test_Price] = @Test_Price WHERE (([Test_Id] = @Original_Test_Id) AND ([Test_Name] = @Original_Test_Name) AND ([Test_Price] = @Original_Test_Price));
SELECT Test_Id, Test_Name, Test_Price FROM Lab_test WHERE (Test_Id = @Test_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Test_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Test_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Test_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Test_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Test_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Test_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Test_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Test_Id" DataSetColumn="Test_Id" />
              <Mapping SourceColumn="Test_Name" DataSetColumn="Test_Name" />
              <Mapping SourceColumn="Test_Price" DataSetColumn="Test_Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MedicineTableAdapter" GeneratorDataComponentClassName="MedicineTableAdapter" Name="Medicine" UserDataComponentName="MedicineTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_Proj_Hospital20ConnectionString1 (Settings)" DbObjectName="DB_Proj_Hospital20.dbo.Medicine" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Medicine] WHERE (([Medicine_Id] = @Original_Medicine_Id) AND ([Medicine_Name] = @Original_Medicine_Name) AND ([Medicine_Price] = @Original_Medicine_Price) AND ([Medicine_Quantity] = @Original_Medicine_Quantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Medicine_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Medicine_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Medicine] ([Medicine_Id], [Medicine_Name], [Medicine_Price], [Medicine_Quantity]) VALUES (@Medicine_Id, @Medicine_Name, @Medicine_Price, @Medicine_Quantity);
SELECT Medicine_Id, Medicine_Name, Medicine_Price, Medicine_Quantity FROM Medicine WHERE (Medicine_Id = @Medicine_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Medicine_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Medicine_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Medicine_Id, Medicine_Name, Medicine_Price, Medicine_Quantity FROM dbo.Medicine</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Medicine] SET [Medicine_Id] = @Medicine_Id, [Medicine_Name] = @Medicine_Name, [Medicine_Price] = @Medicine_Price, [Medicine_Quantity] = @Medicine_Quantity WHERE (([Medicine_Id] = @Original_Medicine_Id) AND ([Medicine_Name] = @Original_Medicine_Name) AND ([Medicine_Price] = @Original_Medicine_Price) AND ([Medicine_Quantity] = @Original_Medicine_Quantity));
SELECT Medicine_Id, Medicine_Name, Medicine_Price, Medicine_Quantity FROM Medicine WHERE (Medicine_Id = @Medicine_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Medicine_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Medicine_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Medicine_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Medicine_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Medicine_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Medicine_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Medicine_Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Medicine_Id" DataSetColumn="Medicine_Id" />
              <Mapping SourceColumn="Medicine_Name" DataSetColumn="Medicine_Name" />
              <Mapping SourceColumn="Medicine_Price" DataSetColumn="Medicine_Price" />
              <Mapping SourceColumn="Medicine_Quantity" DataSetColumn="Medicine_Quantity" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet2" msprop:Generator_UserDSName="DataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Lab_test" msprop:Generator_TableClassName="Lab_testDataTable" msprop:Generator_TableVarName="tableLab_test" msprop:Generator_TablePropName="Lab_test" msprop:Generator_RowDeletingName="Lab_testRowDeleting" msprop:Generator_RowChangingName="Lab_testRowChanging" msprop:Generator_RowEvHandlerName="Lab_testRowChangeEventHandler" msprop:Generator_RowDeletedName="Lab_testRowDeleted" msprop:Generator_UserTableName="Lab_test" msprop:Generator_RowChangedName="Lab_testRowChanged" msprop:Generator_RowEvArgName="Lab_testRowChangeEvent" msprop:Generator_RowClassName="Lab_testRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Test_Id" msprop:Generator_ColumnVarNameInTable="columnTest_Id" msprop:Generator_ColumnPropNameInRow="Test_Id" msprop:Generator_ColumnPropNameInTable="Test_IdColumn" msprop:Generator_UserColumnName="Test_Id" type="xs:int" />
              <xs:element name="Test_Name" msprop:Generator_ColumnVarNameInTable="columnTest_Name" msprop:Generator_ColumnPropNameInRow="Test_Name" msprop:Generator_ColumnPropNameInTable="Test_NameColumn" msprop:Generator_UserColumnName="Test_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Test_Price" msprop:Generator_ColumnVarNameInTable="columnTest_Price" msprop:Generator_ColumnPropNameInRow="Test_Price" msprop:Generator_ColumnPropNameInTable="Test_PriceColumn" msprop:Generator_UserColumnName="Test_Price" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Medicine" msprop:Generator_TableClassName="MedicineDataTable" msprop:Generator_TableVarName="tableMedicine" msprop:Generator_TablePropName="Medicine" msprop:Generator_RowDeletingName="MedicineRowDeleting" msprop:Generator_RowChangingName="MedicineRowChanging" msprop:Generator_RowEvHandlerName="MedicineRowChangeEventHandler" msprop:Generator_RowDeletedName="MedicineRowDeleted" msprop:Generator_UserTableName="Medicine" msprop:Generator_RowChangedName="MedicineRowChanged" msprop:Generator_RowEvArgName="MedicineRowChangeEvent" msprop:Generator_RowClassName="MedicineRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Medicine_Id" msprop:Generator_ColumnVarNameInTable="columnMedicine_Id" msprop:Generator_ColumnPropNameInRow="Medicine_Id" msprop:Generator_ColumnPropNameInTable="Medicine_IdColumn" msprop:Generator_UserColumnName="Medicine_Id" type="xs:int" />
              <xs:element name="Medicine_Name" msprop:Generator_ColumnVarNameInTable="columnMedicine_Name" msprop:Generator_ColumnPropNameInRow="Medicine_Name" msprop:Generator_ColumnPropNameInTable="Medicine_NameColumn" msprop:Generator_UserColumnName="Medicine_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Medicine_Price" msprop:Generator_ColumnVarNameInTable="columnMedicine_Price" msprop:Generator_ColumnPropNameInRow="Medicine_Price" msprop:Generator_ColumnPropNameInTable="Medicine_PriceColumn" msprop:Generator_UserColumnName="Medicine_Price" type="xs:int" />
              <xs:element name="Medicine_Quantity" msprop:Generator_ColumnVarNameInTable="columnMedicine_Quantity" msprop:Generator_ColumnPropNameInRow="Medicine_Quantity" msprop:Generator_ColumnPropNameInTable="Medicine_QuantityColumn" msprop:Generator_UserColumnName="Medicine_Quantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Lab_test" />
      <xs:field xpath="mstns:Test_Id" />
    </xs:unique>
    <xs:unique name="Medicine_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Medicine" />
      <xs:field xpath="mstns:Medicine_Id" />
    </xs:unique>
  </xs:element>
</xs:schema>